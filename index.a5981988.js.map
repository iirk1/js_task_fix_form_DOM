{"mappings":"ACIA,IAAI,EAAc,MAAM,IAAI,CAFb,SAAS,gBAAgB,CAAC,UAIpC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAe,CAAA,CAAA,OAAA,QAAA,CAAA,GAAf,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA4B,CAA5B,IAAM,EAAN,EAAA,KAAA,AACgB,CAAA,cAAf,EAAM,IAAI,EACZ,CAAA,EAAM,IAAI,CAAG,YADf,EAGmB,aAAf,EAAM,IAAI,EACZ,CAAA,EAAM,IAAI,CAAG,WADf,EAIA,EAAM,kBAAkB,CACtB,cACA,wCAAsD,MAAA,CAAf,EAAM,EAAE,CAAC,QAAiB,MAAA,CAAX,EAAM,IAAI,CAAC,cAEnE,IAAM,EAAkB,GAAkC,MAAA,CAA/B,EAAM,IAAI,CAAC,iBAAiB,IAEjD,EACJ,EAAgB,MAAM,CAAC,GAAG,iBAAiB,GAAK,EAAgB,KAAK,CAAC,EAExE,CAAA,EAAM,WAAW,CAAG,EAEM,eAAtB,EAAM,WAAW,EACnB,CAAA,EAAM,WAAW,CAAG,YADtB,EAG0B,cAAtB,EAAM,WAAW,EACnB,CAAA,EAAM,WAAW,CAAG,WADtB,CAGF,C,C,M,E,CAzBK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nvar inputs = document.querySelectorAll('input');\nvar inputsArray = Array.from(inputs);\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = inputsArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var input = _step.value;\n        if (input.name === 'firstName') input.name = 'First Name';\n        if (input.name === 'lastName') input.name = 'Last Name';\n        input.insertAdjacentHTML('beforebegin', \"<label class = 'field-label' for = \\\"\".concat(input.id, '\" > ').concat(input.name, \" </label>\"));\n        var placeholderText = \"\".concat(input.name.toLocaleLowerCase());\n        var capitalizeLetter = placeholderText.charAt(0).toLocaleUpperCase() + placeholderText.slice(1);\n        input.placeholder = capitalizeLetter;\n        if (input.placeholder === 'First name') input.placeholder = 'First Name';\n        if (input.placeholder === 'Last name') input.placeholder = 'Last Name';\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.a5981988.js.map\n","'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nlet inputsArray = Array.from(inputs);\n\nfor (const input of inputsArray) {\n  if (input.name === 'firstName') {\n    input.name = 'First Name';\n  }\n  if (input.name === 'lastName') {\n    input.name = 'Last Name';\n  }\n\n  input.insertAdjacentHTML(\n    'beforebegin',\n    `<label class = 'field-label' for = \"${input.id}\" > ${input.name} </label>`,\n  );\n  const placeholderText = `${input.name.toLocaleLowerCase()}`;\n\n  const capitalizeLetter =\n    placeholderText.charAt(0).toLocaleUpperCase() + placeholderText.slice(1);\n\n  input.placeholder = capitalizeLetter;\n\n  if (input.placeholder === 'First name') {\n    input.placeholder = 'First Name';\n  }\n  if (input.placeholder === 'Last name') {\n    input.placeholder = 'Last Name';\n  }\n}\n"],"names":["inputsArray","Array","from","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","value","name","insertAdjacentHTML","concat","id","placeholderText","toLocaleLowerCase","capitalizeLetter","charAt","toLocaleUpperCase","slice","placeholder","err","return"],"version":3,"file":"index.a5981988.js.map"}